# pkgs-functions
#
#   Packages functions.
#
#    - Environment variables: DISTR, ACTION.
#    - Parameters for functions: func_name distr action
#
# $Id$
#

# Package Identification -----------------------------------------------------------------
PACKAGE_NAME="@PACKAGE_NAME@"
PACKAGE_TARNAME="@PACKAGE_TARNAME@"
PACKAGE_VERSION="@PACKAGE_VERSION@"
PACKAGE_STRING="@PACKAGE_STRING@"

# Variables ------------------------------------------------------------------------------
prefix=@prefix@
exec_prefix=@exec_prefix@
sbindir=@sbindir@
libdir=@libdir@
liblsb=@liblsb@
libexecdir=@libexecdir@
sysconfdir=@sysconfdir@
confdir=@confdir@
sectionconfdir=$confdir/..
localstatedir=@localstatedir@
datarootdir=@datarootdir@
datadir=@datadir@
logdir=@logdir@
pkglibexecdir=@pkglibexecdir@
docdir=@docdir@

debian_lenny_init() {
    local script=$1

    case "$script" in
        oracle-grid )     /usr/sbin/update-rc.d -f $script defaults 80 50 ;;
        oracle-restart)   /usr/sbin/update-rc.d -f $script defaults 80 50 ;;
        oracle-listener)  /usr/sbin/update-rc.d -f $script defaults 85 25 ;;
        oracle-asm)       /usr/sbin/update-rc.d -f $script defaults 90 40 ;;
        oracle-rdbms)     /usr/sbin/update-rc.d -f $script defaults 95 35 ;;
        oracle-dbconsole) /usr/sbin/update-rc.d -f $script defaults 97 23 ;;
    esac
}

upgrade() {
    local distr=$1
    local ver=$2
    local script=$3

    if [ "$ver" = "1.0-13" ] ; then
        case "$distr" in
            redhat)
                /sbin/chkconfig --del $script
                /sbin/chkconfig --add $script
            ;;
            debian)
                if [ -x /bin/insserv ] ; then
                    /bin/insserv --remove $script
                    /bin/insserv --default $script
                else
                    /usr/sbin/update-rc.d -f $script remove
                    debian_lenny_init "$script"
                fi
            ;;
        esac
    fi
}

# summary of how this script can be called:
#        * <new-preinst> `install'
#        * <new-preinst> `install' <old-version>
#        * <new-preinst> `upgrade' <old-version>
#        * <old-preinst> `abort-upgrade' <new-version>
#
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
preinst() {
    local distr=${1:-$DISTR}
    local action=${2:-$ACTION}
    local version=$3

    case "$action" in
        install)
        ;;
        upgrade)
        ;;
        abort-upgrade|abort-remove|abort-deconfigure)
        ;;
        null)
            exit 0
        ;;
        *)
            echo "preinst called with unknown argument \`$@'" >&2
            exit 1
        ;;
    esac
}

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
postinst() {
    local distr=${1:-$DISTR}
    local action=${2:-$ACTION}
    local version=$3
    local script=`echo $PACKAGE_NAME | sed -e 's/-sysvinit//'`

    [ -z "$script" -o "$script" = "oracle" ] && return 0

    [ "$action" = "configure" -a -n "$version" ] && action="upgrade"

    case "$action" in
        configure)
            if [ "$PACKAGE_NAME" = "oracle-sysvinit-restart" ] ; then
                . $liblsb/oracle-restart-functions
                oracle_restart_remove_ohasd || true
            fi
            case "$distr" in
                redhat)
                    /sbin/chkconfig --add $script
                ;;
                debian)
                    if [ -x /bin/insserv ] ; then
                        /bin/insserv --default $script
                    else
                        debian_lenny_init "$script"
                    fi
                ;;
            esac
        ;;
        upgrade)
            upgrade "$distr" "$version" "$script"
        ;;
        abort-upgrade|abort-remove|abort-deconfigure)
        ;;
        null)
            exit 0
        ;;
        *)
            echo "postinst called with unknown argument \`$@'" >&2
            exit 1
        ;;
    esac
}

# summary of how this script can be called:
#        * <prerm> `remove'
#        * <old-prerm> `upgrade' <new-version>
#        * <new-prerm> `failed-upgrade' <old-version>
#        * <conflictor's-prerm> `remove' `in-favour' <package> <new-version>
#        * <deconfigured's-prerm> `deconfigure' `in-favour'
#          <package-being-installed> <version> `removing'
#          <conflicting-package> <version>
# for details, see /usr/doc/packaging-manual/
prerm() {
    local distr=${1:-$DISTR}
    local action=${2:-$ACTION}
    local version=$3
    local script=`echo $PACKAGE_NAME | sed -e 's/-sysvinit//'`

    case "$action" in
     remove)
        case "$distr" in
            redhat)
                /sbin/chkconfig --del $script
            ;;
            debian)
                if [ -x /bin/insserv ] ; then
                    /bin/insserv --remove $script
                else
                    /usr/sbin/update-rc.d -f $script remove
                fi
            ;;
        esac
     ;;
     upgrade|deconfigure)
     ;;
     failed-upgrade)
     ;;
     *)
         echo "prerm called with unknown arguments \`$@'" >&2
         exit 0
     ;;
 esac
}

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
postrm() {
    local distr=${1:-$DISTR}
    local action=${2:-$ACTION}
    local version=$3
    local script=`echo $PACKAGE_NAME | sed -e 's/-sysvinit//'`

    [ -z "$script" -o "$script" = "oracle" ] && return 0

    case "$action" in
        upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
        ;;
        remove)
        ;;
        purge)
        ;;
        null)
            exit 0
        ;;
        *)
            echo "postrm called with unknown arguments \`$@'" >&2
            exit 1
        ;;
    esac
}
